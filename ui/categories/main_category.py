import customtkinter as ctk
from utils.helpers import darken_color

class MainCategory:
    def __init__(self, parent, content_frame, obs_colors, traffic_manager, db_manager):
        self.parent = parent
        self.content_frame = content_frame
        self.obs_colors = obs_colors
        self.traffic_manager = traffic_manager
        self.db_manager = db_manager
        
    def setup(self):
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_frame = ctk.CTkFrame(self.content_frame, fg_color=self.obs_colors["panel"], corner_radius=5)
        stats_frame.pack(fill="x", pady=5)
        
        ctk.CTkLabel(stats_frame, text="üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò", 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color=self.obs_colors["accent"]).pack(anchor="w", padx=15, pady=10)
        
        stats_grid = ctk.CTkFrame(stats_frame, fg_color="transparent")
        stats_grid.pack(fill="x", padx=15, pady=(0, 15))
        
        stats = [
            ("–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π:", "total_sessions", "0", "#64B5F6"),
            ("–£—Å–ø–µ—à–Ω—ã—Ö:", "success_sessions", "0", "#4CAF50"),
            ("–ö–ª–∏–∫–æ–≤:", "total_clicks", "0", "#FF9800"),
            ("–î–æ—Ö–æ–¥:", "total_income", "0 —Ä—É–±", "#4CAF50"),
            ("–ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–∞–π—Ç–æ–≤:", "active_sites", "0", "#64B5F6"),
            ("–ü—Ä–æ–∫—Å–∏:", "proxy_status", "–í—ã–∫–ª", "#F44336"),
            ("–°–µ—Å—Å–∏–π —Å–µ–≥–æ–¥–Ω—è:", "sessions_today", "0", "#64B5F6")
        ]
        
        for i in range(0, len(stats), 2):
            row_frame = ctk.CTkFrame(stats_grid, fg_color="transparent")
            row_frame.pack(fill="x", pady=5)
            
            for j in range(2):
                if i + j < len(stats):
                    label, var_name, default, color = stats[i + j]
                    stat_frame = ctk.CTkFrame(row_frame, fg_color="transparent")
                    stat_frame.pack(side="left", expand=True, padx=5)
                    
                    ctk.CTkLabel(stat_frame, text=label, 
                                text_color=self.obs_colors["text"]).pack(anchor="w")
                    setattr(self.parent, f"{var_name}_var", ctk.StringVar(value=default))
                    ctk.CTkLabel(stat_frame, textvariable=getattr(self.parent, f"{var_name}_var"),
                               font=ctk.CTkFont(weight="bold"), text_color=color).pack(anchor="w")
        
        # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        actions_frame = ctk.CTkFrame(self.content_frame, fg_color=self.obs_colors["panel"], corner_radius=5)
        actions_frame.pack(fill="x", pady=5)
        
        ctk.CTkLabel(actions_frame, text="‚ö° –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø", 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color=self.obs_colors["accent"]).pack(anchor="w", padx=15, pady=10)
        
        action_buttons = [
            ("üî¢ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–º–µ—Ä–∞", self.parent.generate_phones, "#64B5F6"),
            ("üìä –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç", self.parent.generate_report, "#4CAF50"),
            ("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", self.parent.refresh_all, "#FF9800"),
            ("‚öôÔ∏è –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", self.parent.save_all_settings, "#9C27B0")
        ]
        
        actions_grid = ctk.CTkFrame(actions_frame, fg_color="transparent")
        actions_grid.pack(fill="x", padx=15, pady=(0, 15))
        
        for i in range(0, len(action_buttons), 2):
            row_frame = ctk.CTkFrame(actions_grid, fg_color="transparent")
            row_frame.pack(fill="x", pady=5)
            
            for j in range(2):
                if i + j < len(action_buttons):
                    text, command, color = action_buttons[i + j]
                    btn = ctk.CTkButton(row_frame, text=text, command=command,
                                       fg_color=color, hover_color=darken_color(color),
                                       height=35)
                    btn.pack(side="left", expand=True, padx=5)
        
        # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
        status_frame = ctk.CTkFrame(self.content_frame, fg_color=self.obs_colors["panel"], corner_radius=5)
        status_frame.pack(fill="x", pady=5)
        
        ctk.CTkLabel(status_frame, text="üìà –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´", 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color=self.obs_colors["accent"]).pack(anchor="w", padx=15, pady=10)
        
        status_grid = ctk.CTkFrame(status_frame, fg_color="transparent")
        status_grid.pack(fill="x", padx=15, pady=(0, 15))
        
        status_items = [
            ("–°—Ç–∞—Ç—É—Å:", "system_status", "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", "#F44336"),
            ("–ò–ò:", "ai_status", "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω", "#F44336"),
            ("–ë–∞–∑–∞ –Ω–æ–º–µ—Ä–æ–≤:", "db_status", "0 –Ω–æ–º–µ—Ä–æ–≤", "#64B5F6"),
            ("–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", "last_activity", "–ù–∏–∫–æ–≥–¥–∞", "#FF9800")
        ]
        
        for label, var_name, default, color in status_items:
            item_frame = ctk.CTkFrame(status_grid, fg_color="transparent")
            item_frame.pack(fill="x", pady=3)
            
            ctk.CTkLabel(item_frame, text=label, width=150,
                        text_color=self.obs_colors["text"]).pack(side="left")
            setattr(self.parent, f"{var_name}_var", ctk.StringVar(value=default))
            ctk.CTkLabel(item_frame, textvariable=getattr(self.parent, f"{var_name}_var"),
                       text_color=color, font=ctk.CTkFont(weight="bold")).pack(side="right")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        self.parent.update_main_stats()