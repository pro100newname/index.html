import customtkinter as ctk

class SecurityCategory:
    def __init__(self, parent, content_frame, obs_colors, traffic_manager, db_manager):
        self.parent = parent
        self.content_frame = content_frame
        self.obs_colors = obs_colors
        self.traffic_manager = traffic_manager
        self.db_manager = db_manager
        
    def setup(self):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        security_frame = ctk.CTkFrame(self.content_frame, fg_color=self.obs_colors["panel"], corner_radius=5)
        security_frame.pack(fill="x", pady=5)
        
        ctk.CTkLabel(security_frame, text="üõ°Ô∏è –ù–ê–°–¢–†–û–ô–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò", 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color=self.obs_colors["accent"]).pack(anchor="w", padx=15, pady=10)
        
        security_settings = [
            ("–°–∫—Ä—ã—Ç—ã–π —Ä–µ–∂–∏–º", True),
            ("–û—á–∏—Å—Ç–∫–∞ cookies", True),
            ("–°–º–µ–Ω–∞ User-Agent", True),
            ("–û–±—Ö–æ–¥ –¥–µ—Ç–µ–∫—Ü–∏–∏", True),
            ("VPN —Ä–µ–∂–∏–º", False)
        ]
        
        self.parent.security_vars = []
        for text, default in security_settings:
            var = ctk.BooleanVar(value=default)
            self.parent.security_vars.append(var)
            check = ctk.CTkCheckBox(security_frame, text=text, variable=var,
                                   text_color=self.obs_colors["text"])
            check.pack(anchor="w", padx=15, pady=2)
        
        # –£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        level_frame = ctk.CTkFrame(security_frame, fg_color="transparent")
        level_frame.pack(fill="x", padx=15, pady=5)
        
        ctk.CTkLabel(level_frame, text="–£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:",
                    text_color=self.obs_colors["text"]).pack(side="left")
        
        self.parent.security_level_var = ctk.StringVar(value="high")
        level_combo = ctk.CTkComboBox(level_frame, values=["low", "medium", "high", "maximum"],
                                     variable=self.parent.security_level_var)
        level_combo.pack(side="right")
        
        # –ê–≤–∞—Ä–∏–π–Ω—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
        emergency_frame = ctk.CTkFrame(self.content_frame, fg_color=self.obs_colors["panel"], corner_radius=5)
        emergency_frame.pack(fill="x", pady=5)
        
        ctk.CTkLabel(emergency_frame, text="üö® –ê–í–ê–†–ò–ô–ù–´–ï –ü–†–û–¢–û–ö–û–õ–´", 
                    font=ctk.CTkFont(size=14, weight="bold"),
                    text_color=self.obs_colors["accent"]).pack(anchor="w", padx=15, pady=10)
        
        emergency_settings = [
            ("–ê–≤—Ç–æ–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏", True),
            ("–°–º–µ–Ω–∞ IP –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ", True),
            ("–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ", True),
            ("–£–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤", False)
        ]
        
        self.parent.emergency_vars = []
        for text, default in emergency_settings:
            var = ctk.BooleanVar(value=default)
            self.parent.emergency_vars.append(var)
            check = ctk.CTkCheckBox(emergency_frame, text=text, variable=var,
                                   text_color=self.obs_colors["text"])
            check.pack(anchor="w", padx=15, pady=2)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn = ctk.CTkButton(self.content_frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                                command=self.parent.save_security_settings,
                                fg_color=self.obs_colors["accent"],
                                hover_color=self.parent.darken_color(self.obs_colors["accent"]),
                                height=40)
        save_btn.pack(pady=10)